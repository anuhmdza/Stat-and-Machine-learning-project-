
import requests
import pandas as pd
import matplotlib.pyplot as plt

# NOAA API Key
NOAA_API_KEY = "sxEfqUsOUVVRtChzIUbUtonoHczxjuLC"

# NOAA API endpoint
BASE_URL = "https://www.ncdc.noaa.gov/cdo-web/api/v2/data"

# Define request parameters
params = {
    "datasetid": "GHCND",  
    "stationid": "GHCND:USW00012960",  # Houston, TX weather station
    "startdate": "2023-01-01",
    "enddate": "2023-12-31",
    "datatypeid": ["TMAX", "TMIN", "PRCP"],  # Max Temp, Min Temp, Precipitation
    "limit": 1000
}

# Set API headers
headers = {"token": NOAA_API_KEY}

# Make API request
response = requests.get(BASE_URL, headers=headers, params=params)

# Convert response to JSON
if response.status_code == 200:
    data = response.json()
    
    if "results" in data:
        df_noaa = pd.DataFrame(data["results"])

        # Ensure required columns exist
        if all(col in df_noaa.columns for col in ["date", "datatype", "value"]):
            df_noaa.rename(columns={"datatype": "measurement_type", "value": "measurement_value"}, inplace=True)

            # Convert 'date' to datetime
            df_noaa["date"] = pd.to_datetime(df_noaa["date"])  
        else:
            # Fix: Add missing date column manually
            df_noaa["date"] = pd.date_range(start="2023-01-01", periods=len(df_noaa), freq="D")

            df_noaa.rename(columns={"datatype": "measurement_type", "value": "measurement_value"}, inplace=True)

        #  Save cleaned data
        df_noaa.to_csv("noaa_climate_data_clean.csv", index=False)
    else:
        print("No climate data found.")
else:
    print(f"Error: {response.status_code} - {response.text}")
    df_noaa = None

# --------------------------------------
# Visualization: Temperature Trends
# --------------------------------------

if df_noaa is not None:
    df_noaa.set_index("date", inplace=True)  

    # Filter for TMAX and TMIN
    tmax_data = df_noaa[df_noaa["measurement_type"] == "TMAX"]
    tmin_data = df_noaa[df_noaa["measurement_type"] == "TMIN"]

    plt.figure(figsize=(10,5))

    if not tmax_data.empty:
        tmax_data["measurement_value"].plot(label="Max Temp", color="red")
    if not tmin_data.empty:
        tmin_data["measurement_value"].plot(label="Min Temp", color="blue")

    plt.title("Temperature Trends in Houston (2023)")
    plt.xlabel("Date")
    plt.ylabel("Temperature (Â°F)")
    plt.legend()
    plt.show()
